package org.firstinspires.ftc.teamcode;

import android.graphics.Color;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.ColorSensor;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.OpticalDistanceSensor;
import com.qualcomm.robotcore.hardware.Servo;

/**
 * Created by Ashley on 12/20/16.
 */

@Autonomous(name = "auto", group = "opMode")
public class AutoDriveBlue extends LinearOpMode {
    private DcMotor leftMotor, rightMotor;
    private OpticalDistanceSensor opticalDistanceSensor;
    //the distance sensor is placed at the back of the robot
    // the robot will be placed to the left of the line
    private ColorSensor colorSensor;
    private Servo beacon;
    
    public void runOpMode() throws InterruptedException {
        //code to run before starting
        beacon = hardwareMap.servo.get("beacon");
        leftMotor = hardwareMap.dcMotor.get("left_drive");
        rightMotor = hardwareMap.dcMotor.get("right_drive");
        //rightMotor.setDirection(DcMotor.Direction.REVERSE);
        opticalDistanceSensor = hardwareMap.opticalDistanceSensor.get("distance_sensor");
        colorSensor = hardwareMap.colorSensor.get("color_sensor");
        colorSensor.enableLed(true);
        opticalDistanceSensor.enableLed(true);

        waitForStart();

            //drive forward 60 in
            leftMotor.setPower(0.5);
            rightMotor.setPower(0.5);
        
            //rotate 90 degrees counter clockwise
            leftMotor.setPower(0.5);
            rightMotor.setPower(0);
        
            //follow line for 46 in
            followLine();

            if (senseColor() == 1) {
            beacon.setPosition(0.3);
            }
            else beacon.setPosition(0.7);

            //drive forward 0.25 inch to press appropriate button
            leftMotor.setPower(0.5);
            rightMotor.setPower(0.5);
        
            //drive backwards 24 in
            leftMotor.setPower(-0.5);
            rightMotor.setPower(-0.5);

            //rotate 90 degrees clockwise
            leftMotor.setPower(0.5);
            rightMotor.setPower(0);
        
            //drive forward for approximately 48 in
            leftMotor.setPower(0.5);
            rightMotor.setPower(0.5);

            //turn 90 degrees counter clockwise
            leftMotor.setPower(0.5);
            rightMotor.setPower(0);

            //follow line for 48 in
            followLine();
        
            //sense color and rotate servo accordingly  
            if (senseColor() == 1){
            beacon.setPosition(0.3);
            }
            else beacon.setPosition(0.7);
    
            //drive forward 0.25 inch to press appropriate button
            leftMotor.setPower(0.5);
            rightMotor.setPower(0.5);
    
            //drive backward 36 in
            leftMotor.setPower(-0.5);
            rightMotor.setPower(-0.5);
        
            //rotate 225 degrees clockwide
            leftMotor.setPower(0.5);
            rightMotor.setPower(0);
        
            //drive forwards approximately 33 in
            leftMotor.setPower(0.5);
            rightMotor.setPower(0.5);
       
            //follow line
            followLine();
    }

    public void followLine() {
        //-----EOPD LINE SENSOR CODE-----//
        // If the sensor is on the line
        //the left motor rotates to drive it back to the left of the line

        double reflectance = opticalDistanceSensor.getLightDetected();

        if (reflectance >= 0.25) {
            rightMotor.setPower(-0.2); //these values are negative because we're driving backwards
            leftMotor.setPower(0);
        }

        // Otherwise, if the sensor is off the line/detects the floor
        // the right motor rotates to move it back toward the line
        else {
            leftMotor.setPower(-0.2);
            rightMotor.setPower(0);
            telemetry.addData("Reflectance", reflectance);
        }
    }

    public int senseColor() {
        float colorProperties[] = {0f, 0f, 0f};
        int color = Color.argb(colorSensor.alpha(), colorSensor.red(), colorSensor.blue(), colorSensor.green());
        float blue = colorSensor.blue();
        float red = colorSensor.red();

        //if blue
        if (blue - red >= 2) {
            telemetry.addData("Color is", "BLUE");
            return 1;

            //if red
        } else if (red - blue >= 2) {
            telemetry.addData("Color is", "RED");
            return 2;
        }

        //if middle
        else {
            //back out, turn slightly left, follow line again
            telemetry.addData("Color is", "none");
            return 0;
        }
    }
    
}
